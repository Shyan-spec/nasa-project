{"ast":null,"code":"const createThemeBreakpoints = function () {\n  let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const getBreakpointValue = key => {\n    if (typeof key === 'string') {\n      for (const item of settings) {\n        if (typeof item !== 'string' && item.key === key) {\n          return item.value;\n        }\n      }\n      return key;\n    }\n    const item = settings[key > settings.length - 1 ? settings.length - 1 : key];\n    return typeof item === 'string' ? item : item.value;\n  };\n  const up = key => `@media (min-width: ${getBreakpointValue(key)})`;\n  const down = key => `@media (max-width: calc(${getBreakpointValue(key)} - 1px))`;\n  const between = (startKey, endKey) => {\n    const min = getBreakpointValue(startKey);\n    const max = getBreakpointValue(endKey);\n    return `@media (min-width: ${min}) and (max-width: calc(${max} - 1px))`;\n  };\n  return Object.freeze({\n    settings,\n    up,\n    down,\n    between\n  });\n};\nexport { createThemeBreakpoints };","map":{"version":3,"names":["createThemeBreakpoints","settings","getBreakpointValue","key","item","value","length","up","down","between","startKey","endKey","min","max","Object","freeze"],"sources":["/Users/shyanw/Documents/Nasa-Project/client/node_modules/@arwes/theme/build/esm/createThemeBreakpoints/createThemeBreakpoints.js"],"sourcesContent":["const createThemeBreakpoints = (settings = []) => {\n    const getBreakpointValue = (key) => {\n        if (typeof key === 'string') {\n            for (const item of settings) {\n                if (typeof item !== 'string' && item.key === key) {\n                    return item.value;\n                }\n            }\n            return key;\n        }\n        const item = settings[key > settings.length - 1 ? settings.length - 1 : key];\n        return typeof item === 'string' ? item : item.value;\n    };\n    const up = (key) => `@media (min-width: ${getBreakpointValue(key)})`;\n    const down = (key) => `@media (max-width: calc(${getBreakpointValue(key)} - 1px))`;\n    const between = (startKey, endKey) => {\n        const min = getBreakpointValue(startKey);\n        const max = getBreakpointValue(endKey);\n        return `@media (min-width: ${min}) and (max-width: calc(${max} - 1px))`;\n    };\n    return Object.freeze({\n        settings,\n        up,\n        down,\n        between\n    });\n};\nexport { createThemeBreakpoints };\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,YAAmB;EAAA,IAAlBC,QAAQ,uEAAG,EAAE;EACzC,MAAMC,kBAAkB,GAAIC,GAAG,IAAK;IAChC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MACzB,KAAK,MAAMC,IAAI,IAAIH,QAAQ,EAAE;QACzB,IAAI,OAAOG,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACD,GAAG,KAAKA,GAAG,EAAE;UAC9C,OAAOC,IAAI,CAACC,KAAK;QACrB;MACJ;MACA,OAAOF,GAAG;IACd;IACA,MAAMC,IAAI,GAAGH,QAAQ,CAACE,GAAG,GAAGF,QAAQ,CAACK,MAAM,GAAG,CAAC,GAAGL,QAAQ,CAACK,MAAM,GAAG,CAAC,GAAGH,GAAG,CAAC;IAC5E,OAAO,OAAOC,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAACC,KAAK;EACvD,CAAC;EACD,MAAME,EAAE,GAAIJ,GAAG,IAAM,sBAAqBD,kBAAkB,CAACC,GAAG,CAAE,GAAE;EACpE,MAAMK,IAAI,GAAIL,GAAG,IAAM,2BAA0BD,kBAAkB,CAACC,GAAG,CAAE,UAAS;EAClF,MAAMM,OAAO,GAAG,CAACC,QAAQ,EAAEC,MAAM,KAAK;IAClC,MAAMC,GAAG,GAAGV,kBAAkB,CAACQ,QAAQ,CAAC;IACxC,MAAMG,GAAG,GAAGX,kBAAkB,CAACS,MAAM,CAAC;IACtC,OAAQ,sBAAqBC,GAAI,0BAAyBC,GAAI,UAAS;EAC3E,CAAC;EACD,OAAOC,MAAM,CAACC,MAAM,CAAC;IACjBd,QAAQ;IACRM,EAAE;IACFC,IAAI;IACJC;EACJ,CAAC,CAAC;AACN,CAAC;AACD,SAAST,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}