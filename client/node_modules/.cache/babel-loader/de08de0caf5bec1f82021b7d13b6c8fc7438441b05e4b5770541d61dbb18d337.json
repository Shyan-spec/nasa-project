{"ast":null,"code":"import { TOOLS_IS_BROWSER, createTOScheduler } from '@arwes/tools';\n// TODO: Animator with \"combine\" should have its duration as the total duration\n// of its children's durations.\n// TODO: The scheduling right now is as follows:\n// 1. Animator setup node\n// 2. System create node\n// 3. System schedules node setup\n// 3. Animator schedules control change\n// 3. Component subscribes to node\n// 4. System node setup\n// 5. System node transition\n// 6. Machine run control change\n// 6. System node transitions if applicable\n// The sequence of events is not playing with the React scheduling system.\n// And the initial schedules (setup and change) complicates the system.\n// There should be a simpler way to sync with the React system to setup and\n// properly detect for control changes for transitions.\nconst createAnimatorSystem = () => {\n  let idCounter = 0;\n  let root;\n  const createNode = (parent, control) => {\n    const {\n      machine\n    } = control.getSettings();\n    if (!machine) {\n      throw new Error('A machine is required to create an animator node.');\n    }\n    const id = idCounter++;\n    let node; // eslint-disable-line prefer-const\n    let state = '';\n    const transition = newState => {\n      var _a;\n      if (state === newState) {\n        return;\n      }\n      state = newState;\n      const nodeScoped = node;\n      const {\n        onEntry\n      } = machine.states[state] || {};\n      const {\n        onTransition\n      } = control.getSettings();\n      if (onEntry === null || onEntry === void 0 ? void 0 : onEntry.execute) {\n        onEntry.execute(nodeScoped);\n      }\n      if (onEntry === null || onEntry === void 0 ? void 0 : onEntry.schedule) {\n        const task = onEntry.schedule(nodeScoped);\n        if (!Number.isFinite(task.duration) || task.duration < 0 || !task.action.length) {\n          throw new Error('Machine state schedule must return a valid duration and action name.');\n        }\n        nodeScoped.scheduler.start(task.duration, () => send(task.action));\n      }\n      (_a = machine.onTransition) === null || _a === void 0 ? void 0 : _a.call(machine, nodeScoped);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition(nodeScoped);\n      for (const subscriber of nodeScoped.subscribers) {\n        subscriber(nodeScoped);\n      }\n    };\n    const send = action => {\n      var _a, _b;\n      const newState = (_b = (_a = machine.states[state]) === null || _a === void 0 ? void 0 : _a.onActions) === null || _b === void 0 ? void 0 : _b[action];\n      if (newState) {\n        transition(newState);\n      }\n    };\n    const onSettingsChange = () => {\n      const nodeScoped = node;\n      // Schedule after React useEffects have taken effect so the potential\n      // subscribers have been subscribed and the node setup has been done.\n      nodeScoped.scheduler.start('change', 0.001, () => {\n        var _a;\n        (_a = machine.onSettingsChange) === null || _a === void 0 ? void 0 : _a.call(machine, nodeScoped);\n      });\n    };\n    node = Object.freeze({\n      id,\n      control,\n      parent,\n      children: new Set(),\n      subscribers: new Set(),\n      scheduler: createTOScheduler(),\n      context: {},\n      getState: () => state,\n      send,\n      onSettingsChange\n    });\n    if (parent) {\n      parent.children.add(node);\n    }\n    if (TOOLS_IS_BROWSER) {\n      // Schedule after React useEffects have taken effect so the potential\n      // subscribers have been subscribed and before any node change.\n      node.scheduler.start('setup', 0.001, () => {\n        var _a, _b;\n        const nodeScoped = node;\n        (_a = machine.onCreate) === null || _a === void 0 ? void 0 : _a.call(machine, nodeScoped);\n        transition(machine.initialState);\n        (_b = machine.onInitialTransition) === null || _b === void 0 ? void 0 : _b.call(machine, nodeScoped);\n      });\n    }\n    return node;\n  };\n  const removeNode = node => {\n    node.scheduler.stopAll();\n    for (const child of node.children) {\n      removeNode(child);\n    }\n    if (node.parent) {\n      node.parent.children.delete(node);\n    }\n    node.children.clear();\n    node.subscribers.clear();\n  };\n  const unregister = node => {\n    if (!root) {\n      return;\n    }\n    removeNode(node);\n    if (root.id === node.id) {\n      root = undefined;\n    }\n  };\n  const setup = control => {\n    if (root) {\n      removeNode(root);\n    }\n    root = createNode(undefined, control);\n    return root;\n  };\n  const register = (parent, control) => {\n    if (!root) {\n      throw new Error('A root node needs to be setup before registering nodes.');\n    }\n    return createNode(parent, control);\n  };\n  return Object.freeze({\n    setup,\n    register,\n    unregister\n  });\n};\nexport { createAnimatorSystem };","map":{"version":3,"names":["TOOLS_IS_BROWSER","createTOScheduler","createAnimatorSystem","idCounter","root","createNode","parent","control","machine","getSettings","Error","id","node","state","transition","newState","_a","nodeScoped","onEntry","states","onTransition","execute","schedule","task","Number","isFinite","duration","action","length","scheduler","start","send","call","subscriber","subscribers","_b","onActions","onSettingsChange","Object","freeze","children","Set","context","getState","add","onCreate","initialState","onInitialTransition","removeNode","stopAll","child","delete","clear","unregister","undefined","setup","register"],"sources":["/Users/shyanw/Documents/Nasa-Project/client/node_modules/@arwes/animator/build/esm/createAnimatorSystem/createAnimatorSystem.js"],"sourcesContent":["import { TOOLS_IS_BROWSER, createTOScheduler } from '@arwes/tools';\n// TODO: Animator with \"combine\" should have its duration as the total duration\n// of its children's durations.\n// TODO: The scheduling right now is as follows:\n// 1. Animator setup node\n// 2. System create node\n// 3. System schedules node setup\n// 3. Animator schedules control change\n// 3. Component subscribes to node\n// 4. System node setup\n// 5. System node transition\n// 6. Machine run control change\n// 6. System node transitions if applicable\n// The sequence of events is not playing with the React scheduling system.\n// And the initial schedules (setup and change) complicates the system.\n// There should be a simpler way to sync with the React system to setup and\n// properly detect for control changes for transitions.\nconst createAnimatorSystem = () => {\n    let idCounter = 0;\n    let root;\n    const createNode = (parent, control) => {\n        const { machine } = control.getSettings();\n        if (!machine) {\n            throw new Error('A machine is required to create an animator node.');\n        }\n        const id = idCounter++;\n        let node; // eslint-disable-line prefer-const\n        let state = '';\n        const transition = (newState) => {\n            var _a;\n            if (state === newState) {\n                return;\n            }\n            state = newState;\n            const nodeScoped = node;\n            const { onEntry } = machine.states[state] || {};\n            const { onTransition } = control.getSettings();\n            if (onEntry === null || onEntry === void 0 ? void 0 : onEntry.execute) {\n                onEntry.execute(nodeScoped);\n            }\n            if (onEntry === null || onEntry === void 0 ? void 0 : onEntry.schedule) {\n                const task = onEntry.schedule(nodeScoped);\n                if (!Number.isFinite(task.duration) || task.duration < 0 || !task.action.length) {\n                    throw new Error('Machine state schedule must return a valid duration and action name.');\n                }\n                nodeScoped.scheduler.start(task.duration, () => send(task.action));\n            }\n            (_a = machine.onTransition) === null || _a === void 0 ? void 0 : _a.call(machine, nodeScoped);\n            onTransition === null || onTransition === void 0 ? void 0 : onTransition(nodeScoped);\n            for (const subscriber of nodeScoped.subscribers) {\n                subscriber(nodeScoped);\n            }\n        };\n        const send = (action) => {\n            var _a, _b;\n            const newState = (_b = (_a = machine.states[state]) === null || _a === void 0 ? void 0 : _a.onActions) === null || _b === void 0 ? void 0 : _b[action];\n            if (newState) {\n                transition(newState);\n            }\n        };\n        const onSettingsChange = () => {\n            const nodeScoped = node;\n            // Schedule after React useEffects have taken effect so the potential\n            // subscribers have been subscribed and the node setup has been done.\n            nodeScoped.scheduler.start('change', 0.001, () => {\n                var _a;\n                (_a = machine.onSettingsChange) === null || _a === void 0 ? void 0 : _a.call(machine, nodeScoped);\n            });\n        };\n        node = Object.freeze({\n            id,\n            control,\n            parent,\n            children: new Set(),\n            subscribers: new Set(),\n            scheduler: createTOScheduler(),\n            context: {},\n            getState: () => state,\n            send,\n            onSettingsChange\n        });\n        if (parent) {\n            parent.children.add(node);\n        }\n        if (TOOLS_IS_BROWSER) {\n            // Schedule after React useEffects have taken effect so the potential\n            // subscribers have been subscribed and before any node change.\n            node.scheduler.start('setup', 0.001, () => {\n                var _a, _b;\n                const nodeScoped = node;\n                (_a = machine.onCreate) === null || _a === void 0 ? void 0 : _a.call(machine, nodeScoped);\n                transition(machine.initialState);\n                (_b = machine.onInitialTransition) === null || _b === void 0 ? void 0 : _b.call(machine, nodeScoped);\n            });\n        }\n        return node;\n    };\n    const removeNode = (node) => {\n        node.scheduler.stopAll();\n        for (const child of node.children) {\n            removeNode(child);\n        }\n        if (node.parent) {\n            node.parent.children.delete(node);\n        }\n        node.children.clear();\n        node.subscribers.clear();\n    };\n    const unregister = (node) => {\n        if (!root) {\n            return;\n        }\n        removeNode(node);\n        if (root.id === node.id) {\n            root = undefined;\n        }\n    };\n    const setup = (control) => {\n        if (root) {\n            removeNode(root);\n        }\n        root = createNode(undefined, control);\n        return root;\n    };\n    const register = (parent, control) => {\n        if (!root) {\n            throw new Error('A root node needs to be setup before registering nodes.');\n        }\n        return createNode(parent, control);\n    };\n    return Object.freeze({ setup, register, unregister });\n};\nexport { createAnimatorSystem };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}