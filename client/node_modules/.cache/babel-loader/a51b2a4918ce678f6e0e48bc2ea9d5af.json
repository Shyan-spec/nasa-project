{"ast":null,"code":"import { createThemeMultiplier } from \"../createThemeMultiplier/index.js\";\nimport { createThemeUnit } from \"../createThemeUnit/index.js\";\nimport { createThemeColor } from \"../createThemeColor/index.js\";\nimport { createThemeStyle } from \"../createThemeStyle/index.js\";\nimport { createThemeBreakpoints } from \"../createThemeBreakpoints/index.js\"; // TODO: Set typing.\n\nconst extendDeepObject = (structure, defaults, extension) => {\n  const newObject = {};\n  Object.keys(structure).forEach(key => {\n    var _a;\n\n    if (typeof structure[key] === 'object') {\n      if (structure[key] === null) {\n        throw new Error('Theme structure values can not be null.');\n      }\n\n      if (!defaults[key] || typeof defaults[key] !== 'object') {\n        throw new Error('Theme default value should match theme structure object.');\n      }\n\n      newObject[key] = extendDeepObject(structure[key], defaults[key], extension === null || extension === void 0 ? void 0 : extension[key]);\n    } else {\n      newObject[key] = (_a = extension === null || extension === void 0 ? void 0 : extension[key]) !== null && _a !== void 0 ? _a : defaults[key];\n    }\n  });\n  return newObject;\n}; // TODO: Set typing.\n\n\nconst createDeepThemeSetup = (structure, settings) => {\n  const newObject = {};\n  Object.keys(structure).forEach(key => {\n    if (typeof structure[key] === 'object') {\n      newObject[key] = createDeepThemeSetup(structure[key], settings[key]);\n    } else {\n      switch (structure[key]) {\n        case 'multiplier':\n          newObject[key] = createThemeMultiplier(settings[key]);\n          break;\n\n        case 'unit':\n          newObject[key] = createThemeUnit(settings[key]);\n          break;\n\n        case 'color':\n          newObject[key] = createThemeColor(settings[key]);\n          break;\n\n        case 'style':\n          newObject[key] = createThemeStyle(settings[key]);\n          break;\n\n        case 'breakpoints':\n          newObject[key] = createThemeBreakpoints(settings[key]);\n          break;\n\n        case 'other':\n          newObject[key] = settings[key];\n          break;\n\n        default:\n          throw new Error(`Invalid theme structure key \"${structure[key]}\" provided.`);\n      }\n    }\n  });\n  return newObject;\n};\n\nconst createCreateTheme = (themeStructure, themeSettingsDefaults) => {\n  const createTheme = function () {\n    let themeSettingsExtensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let themeSettings;\n\n    if (Array.isArray(themeSettingsExtensions)) {\n      // TODO:\n      // @ts-expect-error\n      themeSettings = themeSettingsExtensions.reduce((settingsTotal, settingsItem) => {\n        if (!settingsItem) {\n          return settingsTotal;\n        }\n\n        return extendDeepObject(themeStructure, settingsTotal, settingsItem);\n      }, themeSettingsDefaults);\n    } else {\n      themeSettings = extendDeepObject(themeStructure, themeSettingsDefaults, themeSettingsExtensions);\n    }\n\n    return createDeepThemeSetup(themeStructure, themeSettings);\n  };\n\n  return createTheme;\n};\n\nexport { createCreateTheme };","map":{"version":3,"sources":["/Users/shyanw/Documents/Nasa-Project/client/node_modules/@arwes/theme/build/esm/createCreateTheme/createCreateTheme.js"],"names":["createThemeMultiplier","createThemeUnit","createThemeColor","createThemeStyle","createThemeBreakpoints","extendDeepObject","structure","defaults","extension","newObject","Object","keys","forEach","key","_a","Error","createDeepThemeSetup","settings","createCreateTheme","themeStructure","themeSettingsDefaults","createTheme","themeSettingsExtensions","themeSettings","Array","isArray","reduce","settingsTotal","settingsItem"],"mappings":"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","sourcesContent":["import { createThemeMultiplier } from \"../createThemeMultiplier/index.js\";\nimport { createThemeUnit } from \"../createThemeUnit/index.js\";\nimport { createThemeColor } from \"../createThemeColor/index.js\";\nimport { createThemeStyle } from \"../createThemeStyle/index.js\";\nimport { createThemeBreakpoints } from \"../createThemeBreakpoints/index.js\";\n// TODO: Set typing.\nconst extendDeepObject = (structure, defaults, extension) => {\n    const newObject = {};\n    Object.keys(structure).forEach(key => {\n        var _a;\n        if (typeof structure[key] === 'object') {\n            if (structure[key] === null) {\n                throw new Error('Theme structure values can not be null.');\n            }\n            if (!defaults[key] || typeof defaults[key] !== 'object') {\n                throw new Error('Theme default value should match theme structure object.');\n            }\n            newObject[key] = extendDeepObject(structure[key], defaults[key], extension === null || extension === void 0 ? void 0 : extension[key]);\n        }\n        else {\n            newObject[key] = (_a = extension === null || extension === void 0 ? void 0 : extension[key]) !== null && _a !== void 0 ? _a : defaults[key];\n        }\n    });\n    return newObject;\n};\n// TODO: Set typing.\nconst createDeepThemeSetup = (structure, settings) => {\n    const newObject = {};\n    Object.keys(structure).forEach(key => {\n        if (typeof structure[key] === 'object') {\n            newObject[key] = createDeepThemeSetup(structure[key], settings[key]);\n        }\n        else {\n            switch (structure[key]) {\n                case 'multiplier':\n                    newObject[key] = createThemeMultiplier(settings[key]);\n                    break;\n                case 'unit':\n                    newObject[key] = createThemeUnit(settings[key]);\n                    break;\n                case 'color':\n                    newObject[key] = createThemeColor(settings[key]);\n                    break;\n                case 'style':\n                    newObject[key] = createThemeStyle(settings[key]);\n                    break;\n                case 'breakpoints':\n                    newObject[key] = createThemeBreakpoints(settings[key]);\n                    break;\n                case 'other':\n                    newObject[key] = settings[key];\n                    break;\n                default: throw new Error(`Invalid theme structure key \"${structure[key]}\" provided.`);\n            }\n        }\n    });\n    return newObject;\n};\nconst createCreateTheme = (themeStructure, themeSettingsDefaults) => {\n    const createTheme = (themeSettingsExtensions = {}) => {\n        let themeSettings;\n        if (Array.isArray(themeSettingsExtensions)) {\n            // TODO:\n            // @ts-expect-error\n            themeSettings = themeSettingsExtensions.reduce((settingsTotal, settingsItem) => {\n                if (!settingsItem) {\n                    return settingsTotal;\n                }\n                return extendDeepObject(themeStructure, settingsTotal, settingsItem);\n            }, themeSettingsDefaults);\n        }\n        else {\n            themeSettings = extendDeepObject(themeStructure, themeSettingsDefaults, themeSettingsExtensions);\n        }\n        return createDeepThemeSetup(themeStructure, themeSettings);\n    };\n    return createTheme;\n};\nexport { createCreateTheme };\n"]},"metadata":{},"sourceType":"module"}