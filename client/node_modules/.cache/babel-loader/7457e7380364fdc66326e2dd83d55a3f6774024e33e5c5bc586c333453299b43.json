{"ast":null,"code":"const randomizeList = providedList => {\n  const list = providedList.slice(0);\n  // Start from the last element and swap one by one. We don't need to run for\n  // the first element, that's why i > 0.\n  for (let i = list.length - 1; i > 0; i--) {\n    // Pick a random index from 0 to i inclusive.\n    const j = Math.floor(Math.random() * (i + 1));\n    // Swap arr[i] with the element at random index.\n    [list[i], list[j]] = [list[j], list[i]];\n  }\n  return list;\n};\nexport { randomizeList };","map":{"version":3,"names":["randomizeList","providedList","list","slice","i","length","j","Math","floor","random"],"sources":["/Users/shyanw/Documents/Nasa-Project/client/node_modules/@arwes/tools/build/esm/randomizeList/randomizeList.js"],"sourcesContent":["const randomizeList = (providedList) => {\n    const list = providedList.slice(0);\n    // Start from the last element and swap one by one. We don't need to run for\n    // the first element, that's why i > 0.\n    for (let i = list.length - 1; i > 0; i--) {\n        // Pick a random index from 0 to i inclusive.\n        const j = Math.floor(Math.random() * (i + 1));\n        // Swap arr[i] with the element at random index.\n        [list[i], list[j]] = [list[j], list[i]];\n    }\n    return list;\n};\nexport { randomizeList };\n"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,YAAY,IAAK;EACpC,MAAMC,IAAI,GAAGD,YAAY,CAACE,KAAK,CAAC,CAAC,CAAC;EAClC;EACA;EACA,KAAK,IAAIC,CAAC,GAAGF,IAAI,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACtC;IACA,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C;IACA,CAACF,IAAI,CAACE,CAAC,CAAC,EAAEF,IAAI,CAACI,CAAC,CAAC,CAAC,GAAG,CAACJ,IAAI,CAACI,CAAC,CAAC,EAAEJ,IAAI,CAACE,CAAC,CAAC,CAAC;EAC3C;EACA,OAAOF,IAAI;AACf,CAAC;AACD,SAASF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}