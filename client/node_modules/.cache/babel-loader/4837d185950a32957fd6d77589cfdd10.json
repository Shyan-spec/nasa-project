{"ast":null,"code":"import { BLEEPS_CATEGORIES } from \"../constants.js\";\nimport { createBleep } from \"../createBleep/index.js\";\nimport { updateBleep } from \"../updateBleep/index.js\";\nimport { unloadBleep } from \"../unloadBleep/index.js\";\nimport { unloadBleeps } from \"../unloadBleeps/index.js\";\n\nconst createOrUpdateBleeps = (providedBleeps, audioSettings, playersSettings, bleepsSettings) => {\n  var _a;\n\n  const bleeps = providedBleeps !== null && providedBleeps !== void 0 ? providedBleeps : {};\n\n  if ((_a = audioSettings.common) === null || _a === void 0 ? void 0 : _a.disabled) {\n    unloadBleeps(bleeps);\n    return bleeps;\n  }\n\n  Object.keys(bleepsSettings).forEach(bleepName => {\n    var _a, _b, _c, _d;\n\n    const bleepSettings = bleepsSettings[bleepName];\n\n    if (!bleepSettings) {\n      unloadBleep(bleeps, bleepName);\n      return;\n    }\n\n    const bleepCategory = bleepSettings.category;\n\n    if (process.env.NODE_ENV !== 'production' && bleepCategory !== undefined && !BLEEPS_CATEGORIES.includes(bleepCategory)) {\n      throw new Error(`Bleep category \"${bleepCategory}\" is not valid.`);\n    }\n\n    const audioCategorySettings = (_a = audioSettings.categories) === null || _a === void 0 ? void 0 : _a[bleepCategory];\n    const processedAudioSettings = { ...audioSettings.common,\n      ...audioCategorySettings\n    };\n\n    if (processedAudioSettings.disabled) {\n      unloadBleep(bleeps, bleepName);\n      return;\n    }\n\n    const playerSettings = playersSettings[bleepSettings.player];\n\n    if (!playerSettings) {\n      throw new Error(`Component bleep requires a provided player. Player \"${bleepSettings.player}\" was not found.`);\n    }\n\n    if (playerSettings.disabled) {\n      unloadBleep(bleeps, bleepName);\n      return;\n    } // If a bleep has updated `src` or `format` settings, it should be re-created.\n    // Otherwise it is updated to be fast and prevent more HTTP requests.\n\n\n    const hasBleepUpdatedSrc = !!((_b = bleeps[bleepName]) === null || _b === void 0 ? void 0 : _b._settings.src.find((v, i) => v !== playerSettings.src[i]));\n    const hasBleepUpdatedFormat = !!((_d = (_c = bleeps[bleepName]) === null || _c === void 0 ? void 0 : _c._settings.format) === null || _d === void 0 ? void 0 : _d.find((v, i) => {\n      var _a;\n\n      return v !== ((_a = playerSettings.format) === null || _a === void 0 ? void 0 : _a[i]);\n    }));\n\n    if (bleeps[bleepName] && !hasBleepUpdatedSrc && !hasBleepUpdatedFormat) {\n      updateBleep(bleeps[bleepName], processedAudioSettings, playerSettings);\n    } else {\n      unloadBleep(bleeps, bleepName);\n      bleeps[bleepName] = createBleep(processedAudioSettings, playerSettings);\n    }\n  });\n  return bleeps;\n};\n\nexport { createOrUpdateBleeps };","map":{"version":3,"sources":["/Users/shyanw/Documents/Nasa-Project/client/node_modules/@arwes/bleeps/build/esm/createOrUpdateBleeps/createOrUpdateBleeps.js"],"names":["BLEEPS_CATEGORIES","createBleep","updateBleep","unloadBleep","unloadBleeps","createOrUpdateBleeps","providedBleeps","audioSettings","playersSettings","bleepsSettings","_a","bleeps","common","disabled","Object","keys","forEach","bleepName","_b","_c","_d","bleepSettings","bleepCategory","category","process","env","NODE_ENV","undefined","includes","Error","audioCategorySettings","categories","processedAudioSettings","playerSettings","player","hasBleepUpdatedSrc","_settings","src","find","v","i","hasBleepUpdatedFormat","format"],"mappings":"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","sourcesContent":["import { BLEEPS_CATEGORIES } from \"../constants.js\";\nimport { createBleep } from \"../createBleep/index.js\";\nimport { updateBleep } from \"../updateBleep/index.js\";\nimport { unloadBleep } from \"../unloadBleep/index.js\";\nimport { unloadBleeps } from \"../unloadBleeps/index.js\";\nconst createOrUpdateBleeps = (providedBleeps, audioSettings, playersSettings, bleepsSettings) => {\n    var _a;\n    const bleeps = providedBleeps !== null && providedBleeps !== void 0 ? providedBleeps : {};\n    if ((_a = audioSettings.common) === null || _a === void 0 ? void 0 : _a.disabled) {\n        unloadBleeps(bleeps);\n        return bleeps;\n    }\n    Object.keys(bleepsSettings).forEach(bleepName => {\n        var _a, _b, _c, _d;\n        const bleepSettings = bleepsSettings[bleepName];\n        if (!bleepSettings) {\n            unloadBleep(bleeps, bleepName);\n            return;\n        }\n        const bleepCategory = bleepSettings.category;\n        if (process.env.NODE_ENV !== 'production' &&\n            bleepCategory !== undefined &&\n            !BLEEPS_CATEGORIES.includes(bleepCategory)) {\n            throw new Error(`Bleep category \"${bleepCategory}\" is not valid.`);\n        }\n        const audioCategorySettings = (_a = audioSettings.categories) === null || _a === void 0 ? void 0 : _a[bleepCategory];\n        const processedAudioSettings = {\n            ...audioSettings.common,\n            ...audioCategorySettings\n        };\n        if (processedAudioSettings.disabled) {\n            unloadBleep(bleeps, bleepName);\n            return;\n        }\n        const playerSettings = playersSettings[bleepSettings.player];\n        if (!playerSettings) {\n            throw new Error(`Component bleep requires a provided player. Player \"${bleepSettings.player}\" was not found.`);\n        }\n        if (playerSettings.disabled) {\n            unloadBleep(bleeps, bleepName);\n            return;\n        }\n        // If a bleep has updated `src` or `format` settings, it should be re-created.\n        // Otherwise it is updated to be fast and prevent more HTTP requests.\n        const hasBleepUpdatedSrc = !!((_b = bleeps[bleepName]) === null || _b === void 0 ? void 0 : _b._settings.src.find((v, i) => v !== playerSettings.src[i]));\n        const hasBleepUpdatedFormat = !!((_d = (_c = bleeps[bleepName]) === null || _c === void 0 ? void 0 : _c._settings.format) === null || _d === void 0 ? void 0 : _d.find((v, i) => { var _a; return v !== ((_a = playerSettings.format) === null || _a === void 0 ? void 0 : _a[i]); }));\n        if (bleeps[bleepName] && !hasBleepUpdatedSrc && !hasBleepUpdatedFormat) {\n            updateBleep(bleeps[bleepName], processedAudioSettings, playerSettings);\n        }\n        else {\n            unloadBleep(bleeps, bleepName);\n            bleeps[bleepName] = createBleep(processedAudioSettings, playerSettings);\n        }\n    });\n    return bleeps;\n};\nexport { createOrUpdateBleeps };\n"]},"metadata":{},"sourceType":"module"}