{"ast":null,"code":"const createThemeBreakpoints = function () {\n  let settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  const getBreakpointValue = key => {\n    if (typeof key === 'string') {\n      for (const item of settings) {\n        if (typeof item !== 'string' && item.key === key) {\n          return item.value;\n        }\n      }\n\n      return key;\n    }\n\n    const item = settings[key > settings.length - 1 ? settings.length - 1 : key];\n    return typeof item === 'string' ? item : item.value;\n  };\n\n  const up = key => `@media (min-width: ${getBreakpointValue(key)})`;\n\n  const down = key => `@media (max-width: calc(${getBreakpointValue(key)} - 1px))`;\n\n  const between = (startKey, endKey) => {\n    const min = getBreakpointValue(startKey);\n    const max = getBreakpointValue(endKey);\n    return `@media (min-width: ${min}) and (max-width: calc(${max} - 1px))`;\n  };\n\n  return Object.freeze({\n    settings,\n    up,\n    down,\n    between\n  });\n};\n\nexport { createThemeBreakpoints };","map":{"version":3,"sources":["/Users/shyanw/Documents/Nasa-Project/client/node_modules/@arwes/theme/build/esm/createThemeBreakpoints/createThemeBreakpoints.js"],"names":["createThemeBreakpoints","settings","getBreakpointValue","key","item","value","length","up","down","between","startKey","endKey","min","max","Object","freeze"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,YAAmB;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;;AAC9C,QAAMC,kBAAkB,GAAIC,GAAD,IAAS;AAChC,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAK,MAAMC,IAAX,IAAmBH,QAAnB,EAA6B;AACzB,YAAI,OAAOG,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACD,GAAL,KAAaA,GAA7C,EAAkD;AAC9C,iBAAOC,IAAI,CAACC,KAAZ;AACH;AACJ;;AACD,aAAOF,GAAP;AACH;;AACD,UAAMC,IAAI,GAAGH,QAAQ,CAACE,GAAG,GAAGF,QAAQ,CAACK,MAAT,GAAkB,CAAxB,GAA4BL,QAAQ,CAACK,MAAT,GAAkB,CAA9C,GAAkDH,GAAnD,CAArB;AACA,WAAO,OAAOC,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACC,KAA9C;AACH,GAXD;;AAYA,QAAME,EAAE,GAAIJ,GAAD,IAAU,sBAAqBD,kBAAkB,CAACC,GAAD,CAAM,GAAlE;;AACA,QAAMK,IAAI,GAAIL,GAAD,IAAU,2BAA0BD,kBAAkB,CAACC,GAAD,CAAM,UAAzE;;AACA,QAAMM,OAAO,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAClC,UAAMC,GAAG,GAAGV,kBAAkB,CAACQ,QAAD,CAA9B;AACA,UAAMG,GAAG,GAAGX,kBAAkB,CAACS,MAAD,CAA9B;AACA,WAAQ,sBAAqBC,GAAI,0BAAyBC,GAAI,UAA9D;AACH,GAJD;;AAKA,SAAOC,MAAM,CAACC,MAAP,CAAc;AACjBd,IAAAA,QADiB;AAEjBM,IAAAA,EAFiB;AAGjBC,IAAAA,IAHiB;AAIjBC,IAAAA;AAJiB,GAAd,CAAP;AAMH,CA1BD;;AA2BA,SAAST,sBAAT","sourcesContent":["const createThemeBreakpoints = (settings = []) => {\n    const getBreakpointValue = (key) => {\n        if (typeof key === 'string') {\n            for (const item of settings) {\n                if (typeof item !== 'string' && item.key === key) {\n                    return item.value;\n                }\n            }\n            return key;\n        }\n        const item = settings[key > settings.length - 1 ? settings.length - 1 : key];\n        return typeof item === 'string' ? item : item.value;\n    };\n    const up = (key) => `@media (min-width: ${getBreakpointValue(key)})`;\n    const down = (key) => `@media (max-width: calc(${getBreakpointValue(key)} - 1px))`;\n    const between = (startKey, endKey) => {\n        const min = getBreakpointValue(startKey);\n        const max = getBreakpointValue(endKey);\n        return `@media (min-width: ${min}) and (max-width: calc(${max} - 1px))`;\n    };\n    return Object.freeze({\n        settings,\n        up,\n        down,\n        between\n    });\n};\nexport { createThemeBreakpoints };\n"]},"metadata":{},"sourceType":"module"}