{"ast":null,"code":"const ID_DEFAULT = '';\n\nfunction createTOScheduler() {\n  const ledger = new Map();\n\n  const isPending = function () {\n    let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ID_DEFAULT;\n    return ledger.has(id);\n  };\n\n  const stop = function () {\n    let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ID_DEFAULT;\n    const cancelSchedule = ledger.get(id);\n\n    if (cancelSchedule) {\n      cancelSchedule();\n    }\n\n    ledger.delete(id);\n  };\n\n  const stopAll = () => {\n    Array.from(ledger.keys()).forEach(stop);\n  };\n\n  const start = (a, b, c) => {\n    const id = c ? a : ID_DEFAULT;\n    const delay = (c ? b : a) * 1000;\n    const callback = c || b;\n    stop(id);\n    const timeoutId = setTimeout(() => {\n      ledger.delete(id);\n      callback();\n    }, delay);\n    ledger.set(id, () => {\n      clearTimeout(timeoutId);\n    });\n  };\n\n  return Object.freeze({\n    isPending,\n    stop,\n    stopAll,\n    start\n  });\n}\n\nexport { createTOScheduler };","map":{"version":3,"sources":["/Users/shyanw/Documents/Nasa-Project/client/node_modules/@arwes/tools/build/esm/createTOScheduler/createTOScheduler.js"],"names":["ID_DEFAULT","createTOScheduler","ledger","Map","isPending","id","has","stop","cancelSchedule","get","delete","stopAll","Array","from","keys","forEach","start","a","b","c","delay","callback","timeoutId","setTimeout","set","clearTimeout","Object","freeze"],"mappings":"AAAA,MAAMA,UAAU,GAAG,EAAnB;;AACA,SAASC,iBAAT,GAA6B;AACzB,QAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AACA,QAAMC,SAAS,GAAG,YAAqB;AAAA,QAApBC,EAAoB,uEAAfL,UAAe;AACnC,WAAOE,MAAM,CAACI,GAAP,CAAWD,EAAX,CAAP;AACH,GAFD;;AAGA,QAAME,IAAI,GAAG,YAAqB;AAAA,QAApBF,EAAoB,uEAAfL,UAAe;AAC9B,UAAMQ,cAAc,GAAGN,MAAM,CAACO,GAAP,CAAWJ,EAAX,CAAvB;;AACA,QAAIG,cAAJ,EAAoB;AAChBA,MAAAA,cAAc;AACjB;;AACDN,IAAAA,MAAM,CAACQ,MAAP,CAAcL,EAAd;AACH,GAND;;AAOA,QAAMM,OAAO,GAAG,MAAM;AAClBC,IAAAA,KAAK,CAACC,IAAN,CAAWX,MAAM,CAACY,IAAP,EAAX,EAA0BC,OAA1B,CAAkCR,IAAlC;AACH,GAFD;;AAGA,QAAMS,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACvB,UAAMd,EAAE,GAAGc,CAAC,GAAGF,CAAH,GAAOjB,UAAnB;AACA,UAAMoB,KAAK,GAAG,CAACD,CAAC,GAAGD,CAAH,GAAOD,CAAT,IAAc,IAA5B;AACA,UAAMI,QAAQ,GAAGF,CAAC,IAAID,CAAtB;AACAX,IAAAA,IAAI,CAACF,EAAD,CAAJ;AACA,UAAMiB,SAAS,GAAGC,UAAU,CAAC,MAAM;AAC/BrB,MAAAA,MAAM,CAACQ,MAAP,CAAcL,EAAd;AACAgB,MAAAA,QAAQ;AACX,KAH2B,EAGzBD,KAHyB,CAA5B;AAIAlB,IAAAA,MAAM,CAACsB,GAAP,CAAWnB,EAAX,EAAe,MAAM;AACjBoB,MAAAA,YAAY,CAACH,SAAD,CAAZ;AACH,KAFD;AAGH,GAZD;;AAaA,SAAOI,MAAM,CAACC,MAAP,CAAc;AAAEvB,IAAAA,SAAF;AAAaG,IAAAA,IAAb;AAAmBI,IAAAA,OAAnB;AAA4BK,IAAAA;AAA5B,GAAd,CAAP;AACH;;AACD,SAASf,iBAAT","sourcesContent":["const ID_DEFAULT = '';\nfunction createTOScheduler() {\n    const ledger = new Map();\n    const isPending = (id = ID_DEFAULT) => {\n        return ledger.has(id);\n    };\n    const stop = (id = ID_DEFAULT) => {\n        const cancelSchedule = ledger.get(id);\n        if (cancelSchedule) {\n            cancelSchedule();\n        }\n        ledger.delete(id);\n    };\n    const stopAll = () => {\n        Array.from(ledger.keys()).forEach(stop);\n    };\n    const start = (a, b, c) => {\n        const id = c ? a : ID_DEFAULT;\n        const delay = (c ? b : a) * 1000;\n        const callback = c || b;\n        stop(id);\n        const timeoutId = setTimeout(() => {\n            ledger.delete(id);\n            callback();\n        }, delay);\n        ledger.set(id, () => {\n            clearTimeout(timeoutId);\n        });\n    };\n    return Object.freeze({ isPending, stop, stopAll, start });\n}\nexport { createTOScheduler };\n"]},"metadata":{},"sourceType":"module"}